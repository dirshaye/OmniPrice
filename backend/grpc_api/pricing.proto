syntax = "proto3";

package omnipricex;

// Service definition
service PricingService {
    // Get price recommendation for a product
    rpc RecommendPrice(PriceRecommendationRequest) returns (PriceRecommendationResponse);
    
    // Update product price
    rpc UpdatePrice(UpdatePriceRequest) returns (UpdatePriceResponse);
    
    // Get price history for a product
    rpc GetPriceHistory(PriceHistoryRequest) returns (PriceHistoryResponse);
    
    // Bulk update prices
    rpc BulkUpdatePrices(BulkUpdateRequest) returns (BulkUpdateResponse);
    
    // Get competitor analysis
    rpc GetCompetitorAnalysis(CompetitorAnalysisRequest) returns (CompetitorAnalysisResponse);
}

// Request/Response messages
message PriceRecommendationRequest {
    string product_id = 1;
    repeated string rule_ids = 2;  // Optional specific rules to apply
    bool include_competitor_analysis = 3;
}

message PriceRecommendationResponse {
    bool success = 1;
    string message = 2;
    PriceRecommendation recommendation = 3;
}

message PriceRecommendation {
    string product_id = 1;
    double current_price = 2;
    double recommended_price = 3;
    double confidence = 4;
    string reasoning = 5;
    repeated string applied_rules = 6;
    CompetitorAnalysis competitor_analysis = 7;
    string timestamp = 8;
}

message UpdatePriceRequest {
    string product_id = 1;
    double new_price = 2;
    string reason = 3;
    string user_id = 4;
}

message UpdatePriceResponse {
    bool success = 1;
    string message = 2;
    string decision_id = 3;
}

message PriceHistoryRequest {
    string product_id = 1;
    int32 days_back = 2;  // Number of days to look back
    bool include_competitor_prices = 3;
}

message PriceHistoryResponse {
    bool success = 1;
    string message = 2;
    repeated PriceHistoryEntry entries = 3;
}

message PriceHistoryEntry {
    string timestamp = 1;
    double our_price = 2;
    double competitor_price = 3;
    string competitor_name = 4;
    string price_change_reason = 5;
}

message BulkUpdateRequest {
    repeated string product_ids = 1;
    string user_id = 2;
    bool auto_apply = 3;  // Whether to automatically apply recommendations
}

message BulkUpdateResponse {
    bool success = 1;
    string message = 2;
    int32 total_products = 3;
    int32 recommendations_generated = 4;
    int32 decisions_created = 5;
    repeated string errors = 6;
}

message CompetitorAnalysisRequest {
    string product_id = 1;
}

message CompetitorAnalysisResponse {
    bool success = 1;
    string message = 2;
    CompetitorAnalysis analysis = 3;
}

message CompetitorAnalysis {
    int32 competitor_count = 1;
    double min_price = 2;
    double max_price = 3;
    double avg_price = 4;
    string our_position = 5;  // "lowest", "middle", "highest"
    repeated CompetitorPrice competitor_prices = 6;
}

message CompetitorPrice {
    string competitor_name = 1;
    double price = 2;
    bool in_stock = 3;
    string last_updated = 4;
}
