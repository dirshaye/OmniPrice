version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  api-gateway:
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - product-service
      - pricing-service
      - scraper-service
      - competitor-service
      - llm-assistant-service
      - auth-service
    environment:
      - PRODUCT_SERVICE_HOST=product-service
      - PRICING_SERVICE_HOST=pricing-service
      - SCRAPER_SERVICE_HOST=scraper-service
      - COMPETITOR_SERVICE_HOST=competitor-service
      - LLM_ASSISTANT_SERVICE_HOST=llm-assistant-service
      - AUTH_SERVICE_HOST=auth-service
    env_file:
      - ./.env

  product-service:
    build:
      context: .
      dockerfile: ./services/product-service/Dockerfile
    env_file:
      - ./.env

  pricing-service:
    build:
      context: .
      dockerfile: ./services/pricing-service/Dockerfile
    env_file:
      - ./.env

  scraper-service:
    build:
      context: .
      dockerfile: ./services/scraper-service/Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - ./.env

  competitor-service:
    build:
      context: .
      dockerfile: ./services/competitor-service/Dockerfile
    env_file:
      - ./.env

  llm-assistant-service:
    build:
      context: .
      dockerfile: ./services/llm-assistant-service/Dockerfile
    env_file:
      - ./.env

  auth-service:
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    env_file:
      - ./.env

  scheduler-service:
    build:
      context: .
      dockerfile: ./services/scheduler/Dockerfile
    ports:
      - "50054:50054"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GRPC_PORT=50054
    env_file:
      - ./.env
    command: python services/scheduler/main.py

  celery-worker:
    build:
      context: .
      dockerfile: ./services/scheduler/Dockerfile
    command: python services/scheduler/worker.py
    depends_on:
      - rabbitmq
      - redis
      - scheduler-service
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - ./.env

  celery-beat:
    build:
      context: .
      dockerfile: ./services/scheduler/Dockerfile
    command: python services/scheduler/beat.py
    depends_on:
      - rabbitmq
      - redis
      - scheduler-service
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - ./.env

  flower:
    build:
      context: .
      dockerfile: ./services/scheduler/Dockerfile
    command: celery -A services.scheduler.app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - ./.env

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    environment:
      - REACT_APP_API_URL=http://localhost:8000

volumes:
  mongodb_data:
  rabbitmq_data:
  redis_data:

networks:
  default:
    external: true
    name: omnipricex-network
