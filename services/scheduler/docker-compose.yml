version: '3.8'

services:
  # RabbitMQ for Celery message broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: scheduler-rabbitmq
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Celery result backend
  redis:
    image: redis:7.2-alpine
    container_name: scheduler-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB (shared with other services)
  mongodb:
    image: mongo:7.0
    container_name: omnipricex-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Scheduler Service (gRPC server)
  scheduler-service:
    build: .
    container_name: scheduler-service
    ports:
      - "50054:50054"    # gRPC port
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GRPC_PORT=50054
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; grpc.insecure_channel('localhost:50054').close()"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Celery Worker
  celery-worker:
    build: .
    container_name: scheduler-celery-worker
    command: python worker.py
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    container_name: scheduler-celery-beat
    command: python beat.py
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    volumes:
      - ./logs:/app/logs
      - celery_beat_data:/tmp
    restart: unless-stopped

  # Flower (Celery monitoring)
  flower:
    build: .
    container_name: scheduler-flower
    command: celery -A app.celery_app flower --port=5555
    ports:
      - "5555:5555"     # Flower web UI
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - rabbitmq
      - redis
    restart: unless-stopped

volumes:
  rabbitmq_data:
  redis_data:
  mongodb_data:
  celery_beat_data:

networks:
  default:
    name: omnipricex-network
    external: true
