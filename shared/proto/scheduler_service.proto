syntax = "proto3";

package omnipricex.scheduler;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// Scheduler Service Definition
service SchedulerService {
    // Job management
    rpc CreateScheduledJob(CreateScheduledJobRequest) returns (ScheduledJobResponse);
    rpc GetScheduledJob(GetScheduledJobRequest) returns (ScheduledJobResponse);
    rpc UpdateScheduledJob(UpdateScheduledJobRequest) returns (ScheduledJobResponse);
    rpc DeleteScheduledJob(DeleteScheduledJobRequest) returns (google.protobuf.Empty);
    rpc ListScheduledJobs(ListScheduledJobsRequest) returns (ListScheduledJobsResponse);
    
    // Job execution
    rpc TriggerJob(TriggerJobRequest) returns (TriggerJobResponse);
    rpc CancelJobExecution(CancelJobExecutionRequest) returns (google.protobuf.Empty);
    rpc GetJobExecution(GetJobExecutionRequest) returns (JobExecutionResponse);
    rpc ListJobExecutions(ListJobExecutionsRequest) returns (ListJobExecutionsResponse);
    
    // Job control
    rpc PauseJob(PauseJobRequest) returns (google.protobuf.Empty);
    rpc ResumeJob(ResumeJobRequest) returns (google.protobuf.Empty);
    
    // Monitoring
    rpc GetJobStatus(GetJobStatusRequest) returns (GetJobStatusResponse);
    rpc GetSystemStatus(google.protobuf.Empty) returns (GetSystemStatusResponse);
}

// Enums
enum JobStatus {
    JOB_STATUS_PENDING = 0;
    JOB_STATUS_RUNNING = 1;
    JOB_STATUS_COMPLETED = 2;
    JOB_STATUS_FAILED = 3;
    JOB_STATUS_CANCELLED = 4;
    JOB_STATUS_RETRYING = 5;
}

enum JobType {
    JOB_TYPE_SCRAPER_JOB = 0;
    JOB_TYPE_PRICING_JOB = 1;
    JOB_TYPE_HEALTH_CHECK = 2;
    JOB_TYPE_CUSTOM = 3;
}

enum TriggerType {
    TRIGGER_TYPE_CRON = 0;
    TRIGGER_TYPE_INTERVAL = 1;
    TRIGGER_TYPE_MANUAL = 2;
    TRIGGER_TYPE_EVENT = 3;
}

// Messages
message ScheduledJob {
    string id = 1;
    string name = 2;
    string description = 3;
    JobType job_type = 4;
    
    // Scheduling
    TriggerType trigger_type = 5;
    string cron_expression = 6;
    int32 interval_seconds = 7;
    
    // Configuration
    string target_service = 8;
    string target_method = 9;
    google.protobuf.Struct parameters = 10;
    
    // Control
    bool is_active = 11;
    int32 max_retries = 12;
    int32 retry_delay = 13;
    int32 timeout_seconds = 14;
    
    // Metadata
    google.protobuf.Timestamp created_at = 15;
    google.protobuf.Timestamp updated_at = 16;
    string created_by = 17;
    
    // Stats
    google.protobuf.Timestamp last_run_at = 18;
    google.protobuf.Timestamp next_run_at = 19;
    int32 total_runs = 20;
    int32 success_runs = 21;
}

message JobExecution {
    string id = 1;
    string job_id = 2;
    string job_name = 3;
    string execution_id = 4;
    
    // Status
    JobStatus status = 5;
    google.protobuf.Timestamp started_at = 6;
    google.protobuf.Timestamp completed_at = 7;
    double duration_seconds = 8;
    
    // Data
    google.protobuf.Struct input_parameters = 9;
    google.protobuf.Struct result_data = 10;
    string error_message = 11;
    google.protobuf.Struct error_details = 12;
    
    // Retry info
    int32 attempt_number = 13;
    int32 max_attempts = 14;
    
    // Metadata
    string triggered_by = 15;
    string node_id = 16;
}

// Request/Response messages
message CreateScheduledJobRequest {
    string name = 1;
    string description = 2;
    JobType job_type = 3;
    TriggerType trigger_type = 4;
    string cron_expression = 5;
    int32 interval_seconds = 6;
    string target_service = 7;
    string target_method = 8;
    google.protobuf.Struct parameters = 9;
    int32 max_retries = 10;
    int32 retry_delay = 11;
    int32 timeout_seconds = 12;
    string created_by = 13;
}

message GetScheduledJobRequest {
    string id = 1;
}

message UpdateScheduledJobRequest {
    string id = 1;
    optional string name = 2;
    optional string description = 3;
    optional string cron_expression = 4;
    optional int32 interval_seconds = 5;
    google.protobuf.Struct parameters = 6;
    optional bool is_active = 7;
    optional int32 max_retries = 8;
    optional int32 retry_delay = 9;
    optional int32 timeout_seconds = 10;
}

message DeleteScheduledJobRequest {
    string id = 1;
}

message ListScheduledJobsRequest {
    int32 page = 1;
    int32 limit = 2;
    optional JobType job_type = 3;
    optional bool is_active = 4;
}

message ListScheduledJobsResponse {
    repeated ScheduledJob jobs = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
    bool has_next = 5;
}

message TriggerJobRequest {
    string job_id = 1;
    google.protobuf.Struct override_parameters = 2;
    string triggered_by = 3;
    bool force_run = 4;  // Run even if job is disabled
}

message TriggerJobResponse {
    bool success = 1;
    string message = 2;
    string execution_id = 3;
    JobExecution execution = 4;
}

message CancelJobExecutionRequest {
    string execution_id = 1;
    string cancelled_by = 2;
    string reason = 3;
}

message GetJobExecutionRequest {
    string execution_id = 1;
}

message ListJobExecutionsRequest {
    int32 page = 1;
    int32 limit = 2;
    optional string job_id = 3;
    optional JobStatus status = 4;
    optional string job_name = 5;
}

message ListJobExecutionsResponse {
    repeated JobExecution executions = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
    bool has_next = 5;
}

message PauseJobRequest {
    string job_id = 1;
    string paused_by = 2;
}

message ResumeJobRequest {
    string job_id = 1;
    string resumed_by = 2;
}

message GetJobStatusRequest {
    string job_id = 1;
}

message GetJobStatusResponse {
    ScheduledJob job = 1;
    repeated JobExecution recent_executions = 2;
    bool is_running = 3;
    google.protobuf.Timestamp next_run_time = 4;
}

message GetSystemStatusResponse {
    bool healthy = 1;
    int32 active_jobs = 2;
    int32 running_executions = 3;
    int32 failed_executions_last_hour = 4;
    google.protobuf.Timestamp server_start_time = 5;
    string version = 6;
}

message ScheduledJobResponse {
    bool success = 1;
    string message = 2;
    ScheduledJob job = 3;
}

message JobExecutionResponse {
    bool success = 1;
    string message = 2;
    JobExecution execution = 3;
}
