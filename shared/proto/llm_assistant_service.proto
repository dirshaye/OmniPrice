syntax = "proto3";

package omnipricex.llm_assistant;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// LLM Assistant Service Definition
service LLMAssistantService {
    rpc GetPricingAnalysis(GetPricingAnalysisRequest) returns (GetPricingAnalysisResponse);
    rpc GetMarketTrends(GetMarketTrendsRequest) returns (GetMarketTrendsResponse);
    rpc GetCompetitorInsights(GetCompetitorInsightsRequest) returns (GetCompetitorInsightsResponse);
    rpc GetPricingRecommendations(GetPricingRecommendationsRequest) returns (GetPricingRecommendationsResponse);
}

// Messages
message PricingAnalysis {
    string product_id = 1;
    string analysis_text = 2;
    double suggested_price_min = 3;
    double suggested_price_max = 4;
    string confidence_level = 5;
    google.protobuf.Timestamp created_at = 6;
}

message MarketTrend {
    string trend_id = 1;
    string trend_description = 2;
    string source = 3;
    google.protobuf.Timestamp identified_at = 4;
}

message CompetitorInsight {
    string competitor_id = 1;
    string insight_text = 2;
    string impact_level = 3;
    google.protobuf.Timestamp generated_at = 4;
}

message PricingRecommendation {
    string product_id = 1;
    double recommended_price = 2;
    string justification = 3;
    google.protobuf.Timestamp valid_until = 4;
}

// Request/Response messages
message GetPricingAnalysisRequest {
    string product_id = 1;
    repeated string competitor_ids = 2;
    bool force_regenerate = 3;
}

message GetPricingAnalysisResponse {
    PricingAnalysis analysis = 1;
}

message GetMarketTrendsRequest {
    string industry = 1;
    string region = 2;
    int32 limit = 3;
}

message GetMarketTrendsResponse {
    repeated MarketTrend trends = 1;
}

message GetCompetitorInsightsRequest {
    string competitor_id = 1;
    int32 limit = 2;
}

message GetCompetitorInsightsResponse {
    repeated CompetitorInsight insights = 1;
}

message GetPricingRecommendationsRequest {
    string product_id = 1;
    int32 number_of_recommendations = 2;
}

message GetPricingRecommendationsResponse {
    repeated PricingRecommendation recommendations = 1;
}
