# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from shared.proto import competitor_service_pb2 as shared_dot_proto_dot_competitor__service__pb2


class CompetitorServiceStub(object):
    """Competitor Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCompetitor = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/CreateCompetitor',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.CreateCompetitorRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.FromString,
                )
        self.GetCompetitor = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/GetCompetitor',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.GetCompetitorRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.FromString,
                )
        self.UpdateCompetitor = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/UpdateCompetitor',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.UpdateCompetitorRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.FromString,
                )
        self.DeleteCompetitor = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/DeleteCompetitor',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.DeleteCompetitorRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListCompetitors = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/ListCompetitors',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.ListCompetitorsRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.ListCompetitorsResponse.FromString,
                )
        self.GetCompetitorProducts = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/GetCompetitorProducts',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.GetCompetitorProductsRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.GetCompetitorProductsResponse.FromString,
                )
        self.UpdateCompetitorProductPrice = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/UpdateCompetitorProductPrice',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.UpdateCompetitorProductPriceRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorProduct.FromString,
                )
        self.TriggerCompetitorScrape = channel.unary_unary(
                '/omnipricex.competitor.CompetitorService/TriggerCompetitorScrape',
                request_serializer=shared_dot_proto_dot_competitor__service__pb2.TriggerCompetitorScrapeRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_competitor__service__pb2.TriggerCompetitorScrapeResponse.FromString,
                )


class CompetitorServiceServicer(object):
    """Competitor Service Definition
    """

    def CreateCompetitor(self, request, context):
        """CRUD operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompetitor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCompetitor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCompetitor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCompetitors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompetitorProducts(self, request, context):
        """Business operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCompetitorProductPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerCompetitorScrape(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CompetitorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCompetitor': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCompetitor,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.CreateCompetitorRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.SerializeToString,
            ),
            'GetCompetitor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompetitor,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.GetCompetitorRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.SerializeToString,
            ),
            'UpdateCompetitor': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCompetitor,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.UpdateCompetitorRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.SerializeToString,
            ),
            'DeleteCompetitor': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCompetitor,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.DeleteCompetitorRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListCompetitors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCompetitors,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.ListCompetitorsRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.ListCompetitorsResponse.SerializeToString,
            ),
            'GetCompetitorProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompetitorProducts,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.GetCompetitorProductsRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.GetCompetitorProductsResponse.SerializeToString,
            ),
            'UpdateCompetitorProductPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCompetitorProductPrice,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.UpdateCompetitorProductPriceRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.CompetitorProduct.SerializeToString,
            ),
            'TriggerCompetitorScrape': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerCompetitorScrape,
                    request_deserializer=shared_dot_proto_dot_competitor__service__pb2.TriggerCompetitorScrapeRequest.FromString,
                    response_serializer=shared_dot_proto_dot_competitor__service__pb2.TriggerCompetitorScrapeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'omnipricex.competitor.CompetitorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CompetitorService(object):
    """Competitor Service Definition
    """

    @staticmethod
    def CreateCompetitor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/CreateCompetitor',
            shared_dot_proto_dot_competitor__service__pb2.CreateCompetitorRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompetitor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/GetCompetitor',
            shared_dot_proto_dot_competitor__service__pb2.GetCompetitorRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCompetitor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/UpdateCompetitor',
            shared_dot_proto_dot_competitor__service__pb2.UpdateCompetitorRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.CompetitorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCompetitor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/DeleteCompetitor',
            shared_dot_proto_dot_competitor__service__pb2.DeleteCompetitorRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCompetitors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/ListCompetitors',
            shared_dot_proto_dot_competitor__service__pb2.ListCompetitorsRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.ListCompetitorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompetitorProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/GetCompetitorProducts',
            shared_dot_proto_dot_competitor__service__pb2.GetCompetitorProductsRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.GetCompetitorProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCompetitorProductPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/UpdateCompetitorProductPrice',
            shared_dot_proto_dot_competitor__service__pb2.UpdateCompetitorProductPriceRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.CompetitorProduct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerCompetitorScrape(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.competitor.CompetitorService/TriggerCompetitorScrape',
            shared_dot_proto_dot_competitor__service__pb2.TriggerCompetitorScrapeRequest.SerializeToString,
            shared_dot_proto_dot_competitor__service__pb2.TriggerCompetitorScrapeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
