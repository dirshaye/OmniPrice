# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from shared.proto import llm_assistant_service_pb2 as shared_dot_proto_dot_llm__assistant__service__pb2


class LLMAssistantServiceStub(object):
    """LLM Assistant Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPricingAnalysis = channel.unary_unary(
                '/omnipricex.llm_assistant.LLMAssistantService/GetPricingAnalysis',
                request_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingAnalysisRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingAnalysisResponse.FromString,
                )
        self.GetMarketTrends = channel.unary_unary(
                '/omnipricex.llm_assistant.LLMAssistantService/GetMarketTrends',
                request_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetMarketTrendsRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetMarketTrendsResponse.FromString,
                )
        self.GetCompetitorInsights = channel.unary_unary(
                '/omnipricex.llm_assistant.LLMAssistantService/GetCompetitorInsights',
                request_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetCompetitorInsightsRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetCompetitorInsightsResponse.FromString,
                )
        self.GetPricingRecommendations = channel.unary_unary(
                '/omnipricex.llm_assistant.LLMAssistantService/GetPricingRecommendations',
                request_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingRecommendationsRequest.SerializeToString,
                response_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingRecommendationsResponse.FromString,
                )


class LLMAssistantServiceServicer(object):
    """LLM Assistant Service Definition
    """

    def GetPricingAnalysis(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketTrends(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompetitorInsights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPricingRecommendations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LLMAssistantServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPricingAnalysis': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPricingAnalysis,
                    request_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingAnalysisRequest.FromString,
                    response_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingAnalysisResponse.SerializeToString,
            ),
            'GetMarketTrends': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketTrends,
                    request_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetMarketTrendsRequest.FromString,
                    response_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetMarketTrendsResponse.SerializeToString,
            ),
            'GetCompetitorInsights': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompetitorInsights,
                    request_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetCompetitorInsightsRequest.FromString,
                    response_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetCompetitorInsightsResponse.SerializeToString,
            ),
            'GetPricingRecommendations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPricingRecommendations,
                    request_deserializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingRecommendationsRequest.FromString,
                    response_serializer=shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingRecommendationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'omnipricex.llm_assistant.LLMAssistantService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LLMAssistantService(object):
    """LLM Assistant Service Definition
    """

    @staticmethod
    def GetPricingAnalysis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.llm_assistant.LLMAssistantService/GetPricingAnalysis',
            shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingAnalysisRequest.SerializeToString,
            shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingAnalysisResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketTrends(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.llm_assistant.LLMAssistantService/GetMarketTrends',
            shared_dot_proto_dot_llm__assistant__service__pb2.GetMarketTrendsRequest.SerializeToString,
            shared_dot_proto_dot_llm__assistant__service__pb2.GetMarketTrendsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompetitorInsights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.llm_assistant.LLMAssistantService/GetCompetitorInsights',
            shared_dot_proto_dot_llm__assistant__service__pb2.GetCompetitorInsightsRequest.SerializeToString,
            shared_dot_proto_dot_llm__assistant__service__pb2.GetCompetitorInsightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPricingRecommendations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.llm_assistant.LLMAssistantService/GetPricingRecommendations',
            shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingRecommendationsRequest.SerializeToString,
            shared_dot_proto_dot_llm__assistant__service__pb2.GetPricingRecommendationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
