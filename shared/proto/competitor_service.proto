syntax = "proto3";

package omnipricex.competitor;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// Competitor Service Definition
service CompetitorService {
    // CRUD operations
    rpc CreateCompetitor(CreateCompetitorRequest) returns (CompetitorResponse);
    rpc GetCompetitor(GetCompetitorRequest) returns (CompetitorResponse);
    rpc UpdateCompetitor(UpdateCompetitorRequest) returns (CompetitorResponse);
    rpc DeleteCompetitor(DeleteCompetitorRequest) returns (google.protobuf.Empty);
    rpc ListCompetitors(ListCompetitorsRequest) returns (ListCompetitorsResponse);
    
    // Business operations
    rpc GetCompetitorProducts(GetCompetitorProductsRequest) returns (GetCompetitorProductsResponse);
    rpc UpdateCompetitorProductPrice(UpdateCompetitorProductPriceRequest) returns (CompetitorProduct);
    rpc TriggerCompetitorScrape(TriggerCompetitorScrapeRequest) returns (TriggerCompetitorScrapeResponse);
}

// Messages
message Competitor {
    string id = 1;
    string name = 2;
    string domain = 3;
    string website_url = 4;
    string description = 5;
    string status = 6;
    bool is_active = 7;
    bool scraping_enabled = 8;
    int32 scraping_frequency = 9;
    google.protobuf.Timestamp last_scraped = 10;
    google.protobuf.Timestamp last_successful_scrape = 11;
    int32 consecutive_failures = 12;
    double success_rate = 13;
    google.protobuf.Timestamp created_at = 14;
    google.protobuf.Timestamp updated_at = 15;
}

message CompetitorProduct {
    string competitor_id = 1;
    string competitor_name = 2;
    string product_url = 3;
    double current_price = 4;
    double original_price = 5;
    string availability = 6;
    google.protobuf.Timestamp last_updated = 7;
    string currency = 8;
    string title = 9;
    string image_url = 10;
    double rating = 11;
    int32 review_count = 12;
}

// Request/Response messages
message CreateCompetitorRequest {
    string name = 1;
    string domain = 2;
    string website_url = 3;
    string description = 4;
    bool scraping_enabled = 5;
    int32 scraping_frequency = 6;
    google.protobuf.Struct selectors = 7;
}

message GetCompetitorRequest {
    string id = 1;
}

message UpdateCompetitorRequest {
    string id = 1;
    optional string name = 2;
    optional string website_url = 3;
    optional string description = 4;
    optional string status = 5;
    optional bool is_active = 6;
    optional bool scraping_enabled = 7;
    optional int32 scraping_frequency = 8;
    google.protobuf.Struct selectors = 9;
}

message DeleteCompetitorRequest {
    string id = 1;
}

message ListCompetitorsRequest {
    int32 page = 1;
    int32 limit = 2;
    optional bool is_active = 3;
    optional string search = 4;
}

message ListCompetitorsResponse {
    repeated Competitor competitors = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
    bool has_next = 5;
}

message GetCompetitorProductsRequest {
    string competitor_id = 1;
    int32 page = 2;
    int32 limit = 3;
}

message GetCompetitorProductsResponse {
    repeated CompetitorProduct products = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
    bool has_next = 5;
}

message UpdateCompetitorProductPriceRequest {
    string competitor_id = 1;
    string product_url = 2;
    double new_price = 3;
    string availability = 4;
}

message TriggerCompetitorScrapeRequest {
    string competitor_id = 1;
    int32 priority = 2;
}

message TriggerCompetitorScrapeResponse {
    bool success = 1;
    string message = 2;
    string job_id = 3;
}

message CompetitorResponse {
    bool success = 1;
    string message = 2;
    Competitor competitor = 3;
}
