# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import scheduler_service_pb2 as scheduler__service__pb2


class SchedulerServiceStub(object):
    """Scheduler Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateScheduledJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/CreateScheduledJob',
                request_serializer=scheduler__service__pb2.CreateScheduledJobRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.ScheduledJobResponse.FromString,
                )
        self.GetScheduledJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/GetScheduledJob',
                request_serializer=scheduler__service__pb2.GetScheduledJobRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.ScheduledJobResponse.FromString,
                )
        self.UpdateScheduledJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/UpdateScheduledJob',
                request_serializer=scheduler__service__pb2.UpdateScheduledJobRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.ScheduledJobResponse.FromString,
                )
        self.DeleteScheduledJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/DeleteScheduledJob',
                request_serializer=scheduler__service__pb2.DeleteScheduledJobRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListScheduledJobs = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/ListScheduledJobs',
                request_serializer=scheduler__service__pb2.ListScheduledJobsRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.ListScheduledJobsResponse.FromString,
                )
        self.TriggerJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/TriggerJob',
                request_serializer=scheduler__service__pb2.TriggerJobRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.TriggerJobResponse.FromString,
                )
        self.CancelJobExecution = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/CancelJobExecution',
                request_serializer=scheduler__service__pb2.CancelJobExecutionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetJobExecution = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/GetJobExecution',
                request_serializer=scheduler__service__pb2.GetJobExecutionRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.JobExecutionResponse.FromString,
                )
        self.ListJobExecutions = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/ListJobExecutions',
                request_serializer=scheduler__service__pb2.ListJobExecutionsRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.ListJobExecutionsResponse.FromString,
                )
        self.PauseJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/PauseJob',
                request_serializer=scheduler__service__pb2.PauseJobRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ResumeJob = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/ResumeJob',
                request_serializer=scheduler__service__pb2.ResumeJobRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetJobStatus = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/GetJobStatus',
                request_serializer=scheduler__service__pb2.GetJobStatusRequest.SerializeToString,
                response_deserializer=scheduler__service__pb2.GetJobStatusResponse.FromString,
                )
        self.GetSystemStatus = channel.unary_unary(
                '/omnipricex.scheduler.SchedulerService/GetSystemStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=scheduler__service__pb2.GetSystemStatusResponse.FromString,
                )


class SchedulerServiceServicer(object):
    """Scheduler Service Definition
    """

    def CreateScheduledJob(self, request, context):
        """Job management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduledJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateScheduledJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteScheduledJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListScheduledJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerJob(self, request, context):
        """Job execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJobExecution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobExecution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobExecutions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseJob(self, request, context):
        """Job control
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobStatus(self, request, context):
        """Monitoring
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateScheduledJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateScheduledJob,
                    request_deserializer=scheduler__service__pb2.CreateScheduledJobRequest.FromString,
                    response_serializer=scheduler__service__pb2.ScheduledJobResponse.SerializeToString,
            ),
            'GetScheduledJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduledJob,
                    request_deserializer=scheduler__service__pb2.GetScheduledJobRequest.FromString,
                    response_serializer=scheduler__service__pb2.ScheduledJobResponse.SerializeToString,
            ),
            'UpdateScheduledJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateScheduledJob,
                    request_deserializer=scheduler__service__pb2.UpdateScheduledJobRequest.FromString,
                    response_serializer=scheduler__service__pb2.ScheduledJobResponse.SerializeToString,
            ),
            'DeleteScheduledJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteScheduledJob,
                    request_deserializer=scheduler__service__pb2.DeleteScheduledJobRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListScheduledJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListScheduledJobs,
                    request_deserializer=scheduler__service__pb2.ListScheduledJobsRequest.FromString,
                    response_serializer=scheduler__service__pb2.ListScheduledJobsResponse.SerializeToString,
            ),
            'TriggerJob': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerJob,
                    request_deserializer=scheduler__service__pb2.TriggerJobRequest.FromString,
                    response_serializer=scheduler__service__pb2.TriggerJobResponse.SerializeToString,
            ),
            'CancelJobExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJobExecution,
                    request_deserializer=scheduler__service__pb2.CancelJobExecutionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetJobExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobExecution,
                    request_deserializer=scheduler__service__pb2.GetJobExecutionRequest.FromString,
                    response_serializer=scheduler__service__pb2.JobExecutionResponse.SerializeToString,
            ),
            'ListJobExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobExecutions,
                    request_deserializer=scheduler__service__pb2.ListJobExecutionsRequest.FromString,
                    response_serializer=scheduler__service__pb2.ListJobExecutionsResponse.SerializeToString,
            ),
            'PauseJob': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseJob,
                    request_deserializer=scheduler__service__pb2.PauseJobRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResumeJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeJob,
                    request_deserializer=scheduler__service__pb2.ResumeJobRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetJobStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobStatus,
                    request_deserializer=scheduler__service__pb2.GetJobStatusRequest.FromString,
                    response_serializer=scheduler__service__pb2.GetJobStatusResponse.SerializeToString,
            ),
            'GetSystemStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=scheduler__service__pb2.GetSystemStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'omnipricex.scheduler.SchedulerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerService(object):
    """Scheduler Service Definition
    """

    @staticmethod
    def CreateScheduledJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/CreateScheduledJob',
            scheduler__service__pb2.CreateScheduledJobRequest.SerializeToString,
            scheduler__service__pb2.ScheduledJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduledJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/GetScheduledJob',
            scheduler__service__pb2.GetScheduledJobRequest.SerializeToString,
            scheduler__service__pb2.ScheduledJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateScheduledJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/UpdateScheduledJob',
            scheduler__service__pb2.UpdateScheduledJobRequest.SerializeToString,
            scheduler__service__pb2.ScheduledJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteScheduledJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/DeleteScheduledJob',
            scheduler__service__pb2.DeleteScheduledJobRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListScheduledJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/ListScheduledJobs',
            scheduler__service__pb2.ListScheduledJobsRequest.SerializeToString,
            scheduler__service__pb2.ListScheduledJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/TriggerJob',
            scheduler__service__pb2.TriggerJobRequest.SerializeToString,
            scheduler__service__pb2.TriggerJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelJobExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/CancelJobExecution',
            scheduler__service__pb2.CancelJobExecutionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/GetJobExecution',
            scheduler__service__pb2.GetJobExecutionRequest.SerializeToString,
            scheduler__service__pb2.JobExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListJobExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/ListJobExecutions',
            scheduler__service__pb2.ListJobExecutionsRequest.SerializeToString,
            scheduler__service__pb2.ListJobExecutionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/PauseJob',
            scheduler__service__pb2.PauseJobRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/ResumeJob',
            scheduler__service__pb2.ResumeJobRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/GetJobStatus',
            scheduler__service__pb2.GetJobStatusRequest.SerializeToString,
            scheduler__service__pb2.GetJobStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSystemStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.scheduler.SchedulerService/GetSystemStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            scheduler__service__pb2.GetSystemStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
