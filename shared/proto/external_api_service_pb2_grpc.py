# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import external_api_service_pb2 as external__api__service__pb2


class ExternalApiServiceStub(object):
    """External API Service for integrating with Shopify, Amazon, Google Shopping APIs
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProducts = channel.unary_unary(
                '/omnipricex.external_api.ExternalApiService/GetProducts',
                request_serializer=external__api__service__pb2.GetProductsRequest.SerializeToString,
                response_deserializer=external__api__service__pb2.ProductListResponse.FromString,
                )
        self.SearchProducts = channel.unary_unary(
                '/omnipricex.external_api.ExternalApiService/SearchProducts',
                request_serializer=external__api__service__pb2.SearchProductsRequest.SerializeToString,
                response_deserializer=external__api__service__pb2.ProductListResponse.FromString,
                )
        self.GetProductById = channel.unary_unary(
                '/omnipricex.external_api.ExternalApiService/GetProductById',
                request_serializer=external__api__service__pb2.GetProductByIdRequest.SerializeToString,
                response_deserializer=external__api__service__pb2.ProductResponse.FromString,
                )
        self.GetPriceComparison = channel.unary_unary(
                '/omnipricex.external_api.ExternalApiService/GetPriceComparison',
                request_serializer=external__api__service__pb2.PriceComparisonRequest.SerializeToString,
                response_deserializer=external__api__service__pb2.ProductListResponse.FromString,
                )
        self.HealthCheck = channel.unary_unary(
                '/omnipricex.external_api.ExternalApiService/HealthCheck',
                request_serializer=external__api__service__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=external__api__service__pb2.HealthCheckResponse.FromString,
                )


class ExternalApiServiceServicer(object):
    """External API Service for integrating with Shopify, Amazon, Google Shopping APIs
    """

    def GetProducts(self, request, context):
        """Get products from a specific provider
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchProducts(self, request, context):
        """Search products across multiple providers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductById(self, request, context):
        """Get specific product by ID from provider
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPriceComparison(self, request, context):
        """Get price comparison across providers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Check health of external API providers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProducts,
                    request_deserializer=external__api__service__pb2.GetProductsRequest.FromString,
                    response_serializer=external__api__service__pb2.ProductListResponse.SerializeToString,
            ),
            'SearchProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchProducts,
                    request_deserializer=external__api__service__pb2.SearchProductsRequest.FromString,
                    response_serializer=external__api__service__pb2.ProductListResponse.SerializeToString,
            ),
            'GetProductById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductById,
                    request_deserializer=external__api__service__pb2.GetProductByIdRequest.FromString,
                    response_serializer=external__api__service__pb2.ProductResponse.SerializeToString,
            ),
            'GetPriceComparison': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPriceComparison,
                    request_deserializer=external__api__service__pb2.PriceComparisonRequest.FromString,
                    response_serializer=external__api__service__pb2.ProductListResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=external__api__service__pb2.HealthCheckRequest.FromString,
                    response_serializer=external__api__service__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'omnipricex.external_api.ExternalApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalApiService(object):
    """External API Service for integrating with Shopify, Amazon, Google Shopping APIs
    """

    @staticmethod
    def GetProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.external_api.ExternalApiService/GetProducts',
            external__api__service__pb2.GetProductsRequest.SerializeToString,
            external__api__service__pb2.ProductListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.external_api.ExternalApiService/SearchProducts',
            external__api__service__pb2.SearchProductsRequest.SerializeToString,
            external__api__service__pb2.ProductListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.external_api.ExternalApiService/GetProductById',
            external__api__service__pb2.GetProductByIdRequest.SerializeToString,
            external__api__service__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPriceComparison(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.external_api.ExternalApiService/GetPriceComparison',
            external__api__service__pb2.PriceComparisonRequest.SerializeToString,
            external__api__service__pb2.ProductListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.external_api.ExternalApiService/HealthCheck',
            external__api__service__pb2.HealthCheckRequest.SerializeToString,
            external__api__service__pb2.HealthCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
