syntax = "proto3";

package omnipricex.external_api;

// External API Service for integrating with Shopify, Amazon, Google Shopping APIs
service ExternalApiService {
    // Get products from a specific provider
    rpc GetProducts(GetProductsRequest) returns (ProductListResponse);
    
    // Search products across multiple providers
    rpc SearchProducts(SearchProductsRequest) returns (ProductListResponse);
    
    // Get specific product by ID from provider
    rpc GetProductById(GetProductByIdRequest) returns (ProductResponse);
    
    // Get price comparison across providers
    rpc GetPriceComparison(PriceComparisonRequest) returns (ProductListResponse);
    
    // Check health of external API providers
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Request to get products from a provider
message GetProductsRequest {
    string provider = 1;  // "shopify", "amazon", "google"
    int32 limit = 2;
    string query = 3;  // For search-based providers like Amazon/Google
    string page_token = 4;  // For pagination
}

// Request to search products across providers
message SearchProductsRequest {
    string query = 1;
    repeated string providers = 2;  // List of providers to search
    int32 limit_per_provider = 3;
}

// Request to get specific product by ID
message GetProductByIdRequest {
    string provider = 1;
    string product_id = 2;
}

// Request for price comparison
message PriceComparisonRequest {
    string product_name = 1;
    repeated string providers = 2;
}

// Health check request
message HealthCheckRequest {
    // Empty for now
}

// Product data structure
message Product {
    string external_id = 1;
    string provider = 2;
    string title = 3;
    string description = 4;
    string brand = 5;
    string category = 6;
    double price = 7;
    string currency = 8;
    double compare_at_price = 9;
    bool in_stock = 10;
    int32 inventory_quantity = 11;
    repeated string image_urls = 12;
    repeated string tags = 13;
    string vendor = 14;
    double weight = 15;
    map<string, string> dimensions = 16;
    string last_updated = 17;  // ISO timestamp
}

// Response for single product
message ProductResponse {
    bool success = 1;
    string message = 2;
    Product product = 3;
}

// Response for multiple products
message ProductListResponse {
    bool success = 1;
    string message = 2;
    repeated Product products = 3;
    int32 total_count = 4;
    string next_page_token = 5;
}

// Health check response
message HealthCheckResponse {
    bool success = 1;
    string message = 2;
    map<string, string> provider_status = 3;  // provider -> status
}
