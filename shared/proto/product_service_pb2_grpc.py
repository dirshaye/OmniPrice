# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import product_service_pb2 as product__service__pb2


class ProductServiceStub(object):
    """Product Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProduct = channel.unary_unary(
                '/omnipricex.product.ProductService/CreateProduct',
                request_serializer=product__service__pb2.CreateProductRequest.SerializeToString,
                response_deserializer=product__service__pb2.ProductResponse.FromString,
                )
        self.GetProduct = channel.unary_unary(
                '/omnipricex.product.ProductService/GetProduct',
                request_serializer=product__service__pb2.GetProductRequest.SerializeToString,
                response_deserializer=product__service__pb2.ProductResponse.FromString,
                )
        self.UpdateProduct = channel.unary_unary(
                '/omnipricex.product.ProductService/UpdateProduct',
                request_serializer=product__service__pb2.UpdateProductRequest.SerializeToString,
                response_deserializer=product__service__pb2.ProductResponse.FromString,
                )
        self.DeleteProduct = channel.unary_unary(
                '/omnipricex.product.ProductService/DeleteProduct',
                request_serializer=product__service__pb2.DeleteProductRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListProducts = channel.unary_unary(
                '/omnipricex.product.ProductService/ListProducts',
                request_serializer=product__service__pb2.ListProductsRequest.SerializeToString,
                response_deserializer=product__service__pb2.ListProductsResponse.FromString,
                )
        self.GetProductsByCategory = channel.unary_unary(
                '/omnipricex.product.ProductService/GetProductsByCategory',
                request_serializer=product__service__pb2.GetProductsByCategoryRequest.SerializeToString,
                response_deserializer=product__service__pb2.ListProductsResponse.FromString,
                )
        self.GetLowStockProducts = channel.unary_unary(
                '/omnipricex.product.ProductService/GetLowStockProducts',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=product__service__pb2.ListProductsResponse.FromString,
                )
        self.UpdateProductPrice = channel.unary_unary(
                '/omnipricex.product.ProductService/UpdateProductPrice',
                request_serializer=product__service__pb2.UpdateProductPriceRequest.SerializeToString,
                response_deserializer=product__service__pb2.ProductResponse.FromString,
                )
        self.BulkUpdateProducts = channel.unary_unary(
                '/omnipricex.product.ProductService/BulkUpdateProducts',
                request_serializer=product__service__pb2.BulkUpdateProductsRequest.SerializeToString,
                response_deserializer=product__service__pb2.BulkUpdateProductsResponse.FromString,
                )


class ProductServiceServicer(object):
    """Product Service Definition
    """

    def CreateProduct(self, request, context):
        """CRUD operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductsByCategory(self, request, context):
        """Business operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLowStockProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkUpdateProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=product__service__pb2.CreateProductRequest.FromString,
                    response_serializer=product__service__pb2.ProductResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=product__service__pb2.GetProductRequest.FromString,
                    response_serializer=product__service__pb2.ProductResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=product__service__pb2.UpdateProductRequest.FromString,
                    response_serializer=product__service__pb2.ProductResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=product__service__pb2.DeleteProductRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProducts,
                    request_deserializer=product__service__pb2.ListProductsRequest.FromString,
                    response_serializer=product__service__pb2.ListProductsResponse.SerializeToString,
            ),
            'GetProductsByCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductsByCategory,
                    request_deserializer=product__service__pb2.GetProductsByCategoryRequest.FromString,
                    response_serializer=product__service__pb2.ListProductsResponse.SerializeToString,
            ),
            'GetLowStockProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLowStockProducts,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=product__service__pb2.ListProductsResponse.SerializeToString,
            ),
            'UpdateProductPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductPrice,
                    request_deserializer=product__service__pb2.UpdateProductPriceRequest.FromString,
                    response_serializer=product__service__pb2.ProductResponse.SerializeToString,
            ),
            'BulkUpdateProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkUpdateProducts,
                    request_deserializer=product__service__pb2.BulkUpdateProductsRequest.FromString,
                    response_serializer=product__service__pb2.BulkUpdateProductsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'omnipricex.product.ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """Product Service Definition
    """

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/CreateProduct',
            product__service__pb2.CreateProductRequest.SerializeToString,
            product__service__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/GetProduct',
            product__service__pb2.GetProductRequest.SerializeToString,
            product__service__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/UpdateProduct',
            product__service__pb2.UpdateProductRequest.SerializeToString,
            product__service__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/DeleteProduct',
            product__service__pb2.DeleteProductRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/ListProducts',
            product__service__pb2.ListProductsRequest.SerializeToString,
            product__service__pb2.ListProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductsByCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/GetProductsByCategory',
            product__service__pb2.GetProductsByCategoryRequest.SerializeToString,
            product__service__pb2.ListProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLowStockProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/GetLowStockProducts',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            product__service__pb2.ListProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProductPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/UpdateProductPrice',
            product__service__pb2.UpdateProductPriceRequest.SerializeToString,
            product__service__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkUpdateProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/omnipricex.product.ProductService/BulkUpdateProducts',
            product__service__pb2.BulkUpdateProductsRequest.SerializeToString,
            product__service__pb2.BulkUpdateProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
